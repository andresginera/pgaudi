Quick usage
===========

For running GAUDI jobs you only need to execute the command ``pgaudi``:

.. code-block:: console

    $ pgaudi path/to/some_file.gaudi-input

However, there are also some options that you can specify:

Optional arguments
******************

Number of subprocesses generated
--------------------------------

With the option ``-p <PROCESSES>`` you can specify the number
of subprocesses in which the main process is divided.

PGaudi automatically detects the number of cores in the machine
and set this value as the number of subprocess to divide.

Complexity of the subprocesses
------------------------------

With the option ``-e, --equal`` you can specifiy to PGaudi that the new
subprocesses generated by the program are computionally equal to the main
process. The values of number of generations and number of individuals per
population of the new subprocesses are the same as in the input file.

Automatically, PGaudi set this option in False to generate computionally
simpler subprocesses.

List with all options:

  -p <PROCESSES>  Number of processes in which the main process is divided.
                  [Default = cores in this machine]
  -e, --equal     Set the new subprocesses generated computionally equal to
                  the main process. [Default = False]
  -h, --help      Show the help message and exit.
  -v, --version   Show program's version number and exit.

Example:

.. code-block:: console

    (insilichem)$ pgaudi path/to/some_file.gaudi-input [-p int_number_of_subprocess] [-e] [-h] [-v]

Input files
***********

The input files needed are the same as the GaudiMM's input files. To learn
how to create them follow the `tutorial <https://gaudi.readthedocs.io/en/latest/input.html#input>`_ of the GaudiMM's documentation.

For visualize the output file you can simply use the command ``gaudi view`` and visualize the solutions with `GaudiView <https://github.com/insilichem/gaudiview>`_.

.. code-block:: console

    $ gaudi view path/to/some_file.gaudi-output


